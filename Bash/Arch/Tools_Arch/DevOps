#!/usr/bin/env bash
# Bash Fucntions to install DevOps software based on Arch docker Image

Return_Message(){
echo -e "\e[1;37;42mTool Added\e[0m"
echo -e "\e[1;32mIf you want to add some tool more, return to previous menus and hit the option, when you finish, return to previous menu\e[0m"
echo -e "\e[1;32mof pimp my container and choose the let's pimp my image option to build your custom image\e[0m"
sleep 2
}

DevOps_Arch(){
	while true;do
	echo -e "\e[1;32m*******************\e[0m"
	echo -e "\033[5;32m*  DevOps tools  *\033[0m"
	echo -e "\e[1;32m*******************\e[0m"
	echo -e ""
	echo -e "\e[1;32m Choose which tools do you want for your custom image \e[0m"
	options=("Apache"
		"Nginx"
		"Puppet"
		"Dig"
		"Return to Previous Menu")

		select opt in "${options[@]}"
		do
			case $opt in

			"Apache")
			echo -e "# Apache" >> Dockerfile
			echo -e "RUN pacman -S apache --noconfirm
CMD [\"usr/sbin/httpd\", \"-D\", \"FOREGROUND\"]
EXPOSE 80\n" >> Dockerfile
			Return_Message
			sleep 2
			break
			;;

			"Nginx")
			echo -e "# Nginx" >> Dockerfile
			echo -e "RUN pacman -S nginx --noconfirm

# forward request and error logs to docker log collector
RUN ln -sf /dev/stdout /var/log/nginx/access.log \
&& ln -sf /dev/stderr /var/log/nginx/error.log

VOLUME [\"/var/cache/nginx\"]

EXPOSE 80 443

CMD [\"nginx\", \"-g\", \"daemon off;\"]\" \n" >> Dockerfile
			Return_Message
			break
			;;

			"Puppet")
			echo -e "# Puppet" >> Dockerfile
			echo -e "RUN pacman -S puppet --noconfirm\n" >> Dockerfile
			Return_Message
			break
			;;

			"Dig")
			echo -e "# Dig" >> Dockerfile
			echo "RUN pacman -S bind-tools --noconfirm\n" >> Dockerfile
			Return_Message
			break
			;;

			"Return to Previous Menu")
			break 2
			;;

			*) echo -e "Opps, wrong option, try again :)"
			;;
			esac

		done
	done

}

"$@"
